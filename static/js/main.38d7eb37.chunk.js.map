{"version":3,"sources":["components/OrderSummaryTable.js","components/CreateOrderForm.js","components/OrderTable.js","components/OrdersHistory.js","components/ChartFilter.js","components/PricingChart.js","assets/dollar.png","components/SummaryStrip.js","components/StockView.js","components/NavBar/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["OrderSummaryTable","value","console","warn","className","InfoCircleFilled","Option","Select","Panel","Collapse","CreateOrderForm","props","Form","useForm","form","name","onFinish","values","expiry_term_custom","expiry_term","slippage_percentage","slippage_percentage_custom","payload","date","Date","now","generatePayload","notification","open","message","icon","SmileOutlined","style","color","handleOrderPlaced","resetFields","onFinishFailed","errorInfo","log","Item","label","initialValue","rules","required","placeholder","Group","Button","getFieldValue","validator","_","Promise","reject","Error","resolve","CaretLeftFilled","accordion","expandIconPosition","border","defaultActiveKey","header","type","htmlType","OrderTable","data","columns","title","dataIndex","key","responsive","placement","InfoCircleOutlined","render","text","record","children","marginLeft","RightCircleOutlined","dataSource","pagination","TabPane","Tabs","OrdersHistory","orderHistoryState","onChange","tab","active_orders","past_orders","ChartFilter","chartFilter","handleFilterChange","length","map","range","id","isActive","onClick","PlotMaps","PricingChart","useState","setData","filterValue","setFilterValue","filterOptions","setFilterOptions","asyncFetch","fetch","then","response","json","timeAccordingToCurrentTime","completeData","time","moment","format","formatDateAndTime","Data","catch","error","useEffect","config","xField","yField","height","areaStyle","fill","stroke","yAxis","tooltip","customContent","close","setTooltipPosition","evt","plot","gEvent","x","y","Object","keys","forEach","chart","showTooltip","updateFilter","item","temp","assign","onReady","area","on","SummaryStrip","width","src","dollarImage","alt","orderHistory","amount","buy_sell_cta","curreny_type","price","undefined","StockView","setOrderHistoryState","params","newActiveState","state","NavBar","SwapOutlined","ThunderboltOutlined","WalletOutlined","EllipsisOutlined","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38d7eb37.chunk.js","sourcesContent":["import React from 'react';\nimport { InfoCircleFilled } from '@ant-design/icons';\nimport '../styles/components/stockView/_orderSummaryTable.scss';\n\nconst OrderSummaryTable = ({ value = 0 }) => {\n    console.warn('OrderSummaryTable')\n    return (\n        <div className='summary-block'>\n            <div className='flex-block'>\n                <div> Estimated Reward</div>\n                <div> 0.5 OCTANE -22 ETH <InfoCircleFilled /> </div>\n            </div>\n            <div className='flex-block'>\n                <div> Order Fee</div>\n                <div > 0.002 ETH <InfoCircleFilled /> </div>\n            </div>\n            <div className='flex-block'>\n                <div> Fee Discount</div>\n                <div className='discount-value'> 0 ETH <span className='ico-block'><InfoCircleFilled /></span> </div>\n            </div>\n            <div className='flex-block'>\n                <div> Total Amount</div>\n                <div> $ 2500 <InfoCircleFilled /></div>\n            </div>\n        </div>\n    )\n}\n\nexport default OrderSummaryTable;\n","import React from 'react';\nimport { Form, Button, InputNumber, Radio, Select, Collapse, notification } from 'antd';\n\nimport { CaretLeftFilled, SmileOutlined } from '@ant-design/icons';\nimport OrderSummaryTable from './OrderSummaryTable';\n\nimport 'antd/lib/select/style/index.css';\nimport 'antd/lib/notification/style/index.css';\nimport 'antd/lib/radio/style/index.css';\nimport 'antd/lib/collapse/style/index.css';\nimport 'antd/es/select/style/index.css';\nimport '../styles/components/stockView/_orderForm.scss';\n\nconst { Option } = Select;\nconst { Panel } = Collapse;\n\nconst generatePayload = (payload) => {\n    const newPayload = {\n        ...payload,\n        expiry_term: payload.expiry_term_custom || payload.expiry_term,\n        slippage_percentage: payload.slippage_percentage_custom || payload.slippage_percentage,\n        date: Date.now(),\n    }\n    return newPayload;\n}\n\nconst CreateOrderForm = (props) => {\n    const [form] = Form.useForm(); //es-lint ignore\n    const onFinish = (values) => {\n        if (!values.expiry_term_custom && !values.expiry_term) {\n            return;\n        }\n        if (!values.slippage_percentage && !values.slippage_percentage_custom) {\n            return;\n        }\n        const payload = generatePayload(values);\n        notification.open({\n            message: 'Your Order has been placed successfully',\n            icon: <SmileOutlined style={{ color: '#70E6DB' }} />,\n            className: 'notifier-block'\n        });\n        props.handleOrderPlaced(payload);\n        form.resetFields();\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n        notification.open({\n            message: 'Your Order could not be placed',\n            className: 'notifier-block'\n        });\n    };\n\n    console.warn('create order')\n    return (\n        <div className='order-form'>\n            <Form\n                name=\"create-order-form\"\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                form={form}\n            >\n                <div className='form-box'>\n                    <Form.Item\n                        name=\"curreny_type\"\n                        label=\"\"\n                        // hasFeedback\n                        initialValue=\"EID/TGH\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please select currency type!',\n                            },\n                        ]}\n                    >\n                        <Select placeholder=\"Please select currency type!\">\n                            <Option value=\"EID/TGH\">EID/TGH</Option>\n                            <Option value=\"ETH/DAI\">ETH/DAI</Option>\n                            <Option value=\"USD/FAG\">USD/FAG</Option>\n                            <Option value=\"RUP/SNS\">RUP/SNS</Option>\n                        </Select>\n                    </Form.Item>\n                </div>\n                <div className='form-box'>\n                    <Form.Item\n                        name=\"buy_sell_cta\"\n                        label=\"\"\n                        className='margin-little buy-sell-radio'\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please select',\n                            },\n                        ]}\n                    >\n                        <Radio.Group >\n                            <Radio.Button value=\"Buy\">BUY</Radio.Button>\n                            <Radio.Button value=\"Sell\">SELL</Radio.Button>\n                        </Radio.Group>\n                    </Form.Item>\n\n                    <div className='order-form-label-wrapper'>\n                        <div className='label-order-form'>Amount </div>\n                        <div className='option-wrapper'>\n                            <div className='options balance'> Bal : 0.012</div>\n                        </div>\n                    </div>\n                    <div className='relative-block'>\n                        <Form.Item\n                            label=\"\"\n                            name=\"amount\"\n                            rules={\n                                [\n                                    {\n                                        required: true, message: 'Please enter amount '\n                                    },\n                                    ({ getFieldValue }) => ({\n                                        validator(_, value) {\n                                            if (value <= 0) {\n                                                return Promise.reject(new Error('Please select a positive value'));\n                                            }\n                                            return Promise.resolve();\n                                        },\n                                    }),\n                                ]}\n                            className='margin-little'\n                        >\n                            <InputNumber />\n                        </Form.Item>\n                        <div className='order-form-amount-input-wrapper abs-element'>\n                            <span className='selected-amount-type max'> MAX</span>\n                            <span className='selected-amount-type eth'> ETH</span>\n                        </div>\n                    </div>\n\n                    <div className='order-form-label-wrapper'>\n                        <div className='label-order-form'>At Price </div>\n                        <div className='option-wrapper'>\n                            <span className='options option-block'> +10%</span>\n                            <span className='options option-block'> <CaretLeftFilled /></span>\n                        </div>\n                    </div>\n                    <div className='relative-block'>\n                        <Form.Item\n                            label=\"\"\n                            name=\"price\"\n                            rules={\n                                [\n                                    { required: true, message: 'Please enter price' },\n                                    ({ getFieldValue }) => ({\n                                        validator(_, value) {\n                                            if (value <= 0) {\n                                                return Promise.reject(new Error('Please select a positive value'));\n                                            }\n                                            return Promise.resolve();\n                                        },\n                                    }),\n                                ]}\n                            className='margin-little'\n                        >\n                            <InputNumber placeholder=\"Enter Amount\" />\n                        </Form.Item>\n                        <div className='order-form-amount-input-wrapper abs-element'>\n                            <span className='selected-amount-type dai'> DAI</span>\n                        </div>\n                    </div>\n                    <OrderSummaryTable />\n                </div>\n                <div className='form-box'>\n                    <Collapse accordion expandIconPosition=\"right\" style={{ border: 'none' }} defaultActiveKey={['1']}>\n                        <Panel header=\"Advanced Options\" key=\"1\">\n                            <div className='label-margin'>\n                                <div className='order-form-label-wrapper'>\n                                    <div className='form-field'> Max Slippage</div>\n                                </div>\n                                <Form.Item\n                                    name=\"slippage_percentage\"\n                                    label=\"\"\n                                    className='slippage-radio margin-little'\n                                    rules={[\n                                        {\n                                            required: false,\n                                            message: 'Please select slippage % or select custom',\n                                        },\n                                    ]}\n                                >\n\n                                    <Radio.Group >\n                                        <Radio.Button value=\"0.5\">0.5%</Radio.Button>\n                                        <Radio.Button value=\"1\">1%</Radio.Button>\n                                        <Radio.Button value=\"2\">2%</Radio.Button>\n                                    </Radio.Group>\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"\"\n                                    name=\"slippage_percentage_custom\"\n                                    className='margin-little'\n                                    rules={[\n                                        { required: false, message: 'Please enter slippage percent' },\n                                        ({ getFieldValue }) => ({\n                                            validator(_, value) {\n                                                if (!value && !getFieldValue('slippage_percentage')) {\n                                                    return Promise.reject(new Error('Please select slippage percent or edit custom'));\n                                                } if (value && value <= 0) {\n                                                    return Promise.reject(new Error('Please enter positive value'));\n                                                }\n                                                return Promise.resolve();\n                                            },\n                                        }),\n                                    ]}\n                                >\n                                    <InputNumber placeholder=\"Custom percent\" />\n                                </Form.Item>\n                                <div className='order-form-label-wrapper'>\n                                    <div className='form-field'> Order Expiry</div>\n                                </div>\n                                <div className='order-expiry-option'>\n                                    <Form.Item\n                                        name=\"expiry_term\"\n                                        label=\"\"\n                                        rules={[\n                                            {\n                                                required: false,\n                                                message: 'Please select number of years',\n                                            },\n                                        ]}\n                                        initialValue=\"10\"\n                                    >\n                                        <Select placeholder=\"Please select number of years\">\n                                            <Option value=\"05\">05 Years</Option>\n                                            <Option value=\"10\">10 Years</Option>\n                                            <Option value=\"15\">15 Years</Option>\n                                            <Option value=\"20\">20 Years</Option>\n                                        </Select>\n                                    </Form.Item>\n\n\n                                    <Form.Item\n                                        label=\"\"\n                                        name=\"expiry_term_custom\"\n                                        rules={[\n                                            { required: false, message: 'Please enter expiry term' },\n                                            ({ getFieldValue }) => ({\n                                                validator(_, value) {\n                                                    if (!value && !getFieldValue('expiry_term')) {\n                                                        return Promise.reject(new Error('Please select expiry term  or edit custom'));\n                                                    } if (value && value <= 0) {\n                                                        return Promise.reject(new Error('Please enter positive value'));\n                                                    }\n                                                    return Promise.resolve();\n\n                                                },\n                                            }),\n\n                                        ]}\n                                    >\n                                        <InputNumber placeholder=\"Custom Days\" />\n                                    </Form.Item>\n                                </div>\n                            </div>\n                        </Panel>\n                    </Collapse>\n                </div>\n                <Form.Item className='form-box submit-btn' >\n                    <Button type=\"primary\" className='light-theme-bg-cta' htmlType=\"submit\">\n                        PLACE ORDER\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div >\n    )\n}\n\n\n\n// const WrappedCreateOrderForm = Form.create({name: 'place_order_form' })(CreateOrderForm);\n\n\nexport default CreateOrderForm;","import React from 'react';\nimport { Table, Tooltip } from 'antd';\nimport { InfoCircleOutlined, RightCircleOutlined } from '@ant-design/icons';\n\nimport 'antd/lib/table/style/index.css';\nimport '../styles/components/common/_tableDefaultStyle.scss';\n\nconst OrderTable = ({ data }) => {\n    const columns = [\n        {\n            title: 'Currency Type',\n            dataIndex: 'curreny_type',\n            key: 'curreny_type',\n            responsive: [\"lg\", \"xxl\", \"xl\"]\n        },\n        {\n            title: 'Amount',\n            dataIndex: 'amount',\n            key: 'amount',\n            responsive: [\"xs\", \"xxl\", \"lg\", \"md\", \"sm\", \"xl\"]\n        },\n        {\n            title: 'Price',\n            dataIndex: 'price',\n            key: 'price',\n            responsive: [\"xs\", \"xxl\", \"lg\", \"md\", \"sm\", \"xl\"]\n        },\n        {\n            title:\n                <div>Expiry&nbsp;\n\t\t            <Tooltip placement='bottom' title=''>\n                        <InfoCircleOutlined />\n                    </Tooltip>\n                </div>,\n            dataIndex: 'expiry_term',\n            key: 'expiry_term',\n            responsive: [\"lg\", \"xl\", \"xxl\"]\n        },\n        {\n            title: 'Buy/Sell',\n            dataIndex: 'buy_sell_cta',\n            key: 'buy_sell_cta',\n            render(text, record) {\n                return {\n                    children: <div className={`${text === 'Buy' ? 'active' : 'sell-color'}`}>{text}</div>\n                };\n            },\n            responsive: [\"xs\", \"xxl\", \"lg\", \"md\", \"sm\", \"xl\"]\n        },\n        {\n            title: 'Slippage Percent',\n            dataIndex: 'slippage_percentage',\n            key: 'slippage_percentage',\n            render(text, record) {\n                return {\n                    children: <div className=''><span>{text}%</span> <span className='' style={{ marginLeft: '4rem' }}> <RightCircleOutlined /></span> </div>\n                };\n            },\n            responsive: [\"lg\", \"xl\", \"xxl\"]\n        },\n    ];\n    return (\n        <div className='order-history-table'>\n            <Table\n                dataSource={data}\n                columns={columns}\n                pagination={false}\n                className='time-table-row-select'\n            />\n        </div>\n    )\n}\n\nexport default OrderTable\n","import React from 'react';\nimport { Tabs } from 'antd';\n\nimport OrderTable from './OrderTable';\nimport 'antd/lib/tabs/style/index.css';\n\nconst { TabPane } = Tabs;\n\nconst OrdersHistory = ({ orderHistoryState }) => {\n    const callback = (key) => {\n        console.log('Tab changed')\n    }\n    console.warn('OrdersHistory')\n    return (\n        <div className='order-history-component'>\n            <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                <TabPane tab=\"Active Orders\" key=\"1\">\n                    <OrderTable data={orderHistoryState.active_orders} />\n                </TabPane>\n                <TabPane tab=\"Past Orders\" key=\"2\">\n                    <OrderTable data={orderHistoryState.past_orders} />\n                </TabPane>\n            </Tabs>\n        </div>\n    )\n}\n\nexport default OrdersHistory;\n","import React from 'react';\nimport '../styles/components/common/_chartFilter.scss';\n\nconst ChartFilter = ({ chartFilter, handleFilterChange }) => {\n    console.warn('chart filter')\n    return (\n        <div className='chart-filter-wrapper'>\n            {chartFilter && chartFilter.length > 0 &&\n                chartFilter.map((range, id) => {\n                    return (\n                        <div key={id} className={`chart-filter ${range.isActive ? 'active' : 'is-not-active'}`} onClick={() => handleFilterChange(range.key)}> {range.value} </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default ChartFilter\n","import React, { useState, useEffect } from 'react';\nimport { Area } from '@ant-design/charts';\nimport moment from 'moment';\n// import { PlotEvent } from '@ant-design/charts/es/interface';\n\nimport ChartFilter from './ChartFilter';\n\nimport '../styles/components/common/_chartDefaultStyle.scss';\n\nconst PlotMaps = {};\n// let PreTooltipData;\n\nconst chartFilter = [\n    { key: '1H', value: '1H', isActive: false },\n    { key: '24H', value: '24H', isActive: true },\n    { key: '1W', value: '1W', isActive: false },\n    { key: '1M', value: '1M', isActive: false },\n    { key: '1Y', value: '1Y', isActive: false },\n    { key: 'ALL', value: 'ALL', isActive: false }\n];\n\nconst formatDateAndTime = (completeData, filterValue) => {\n    if (filterValue === '1H') {\n        return completeData.map(data => ({ ...data, time: moment(data.time).format('m:ss') }));\n    } else {\n        return completeData.map(data => ({ ...data, time: moment(data.time).format('h:mm a') }));\n    }\n}\n\nconst PricingChart = () => {\n\n    const [data, setData] = useState([]);\n    const [filterValue, setFilterValue] = useState(\"24H\");\n    const [filterOptions, setFilterOptions] = useState(chartFilter);\n\n    const asyncFetch = () => {\n        fetch(`https://min-api.cryptocompare.com/data/v2/${filterValue === '1H' ? 'histohour' : 'histoday'}?fsym=BTC&tsym=USD&limit=100`)\n            .then((response) => response.json())\n            .then((json) => {\n                let timeAccordingToCurrentTime = formatDateAndTime(json.Data.Data, filterValue)\n                setData(timeAccordingToCurrentTime);\n            })\n            .catch((error) => {\n                console.log('fetch data failed', error);\n            });\n    };\n\n    useEffect(() => {\n        asyncFetch();\n    }, [filterValue]);\n\n    const config = {\n        data,\n        xField: 'time',\n        yField: 'close',\n        height: 200,\n        areaStyle: {\n            // fill: 'l(170) 0:#136B54 0.5:#7ec2f3 1:#15332D',\n            fill: '#145D4D',\n            stroke: '',\n        },\n        color: '#5AD7B7',\n        // yAxis: {\n        //     grid: {\n        //         line: {\n        //             style: {\n        //                 stroke: '',\n        //                 lineWidth: 2,\n        //                 lineDash: [4, 5],\n        //                 strokeOpacity: 1,\n        //                 shadowColor: '',\n        //                 shadowBlur: 10,\n        //                 shadowOffsetX: 5,\n        //                 shadowOffsetY: 5,\n        //                 cursor: 'pointer'\n        //             }\n        //         }\n        //     }\n        // },\n        yAxis: false,\n        tooltip: {\n            customContent: (title = '', data) => {\n                if (data && data[0] && data[0].data)\n                    return `<div class='chart-tooltip bottom-arrow'><div class='price'>$ ${data[0].data.close}</div><div class='time'>${data[0].data.time} </div></div>`;\n            },\n\n        }\n    }\n\n    const showTooltip = ({ x, y }) => {\n        Object.keys(PlotMaps).forEach((plot) => {\n            PlotMaps[plot].chart.showTooltip({ x, y });\n        });\n    };\n\n    const setTooltipPosition = (evt, plot) => {\n        // var _a, _b;\n        const { x, y } = evt.gEvent;\n\n        //const currentData = plot.chart.getTooltipItems({ x, y });\n        // if (((_a = currentData[0]) === null || _a === void 0 ? void 0 : _a.data.date) === (PreTooltipData === null || PreTooltipData === void 0 ? void 0 : PreTooltipData.date)) {\n        //     return;\n        // }\n        // PreTooltipData = (_b = currentData[0]) === null || _b === void 0 ? void 0 : _b.data;\n        showTooltip({ x, y });\n    };\n\n    const handleFilterChange = (range) => {\n        const updateFilter = filterOptions && filterOptions.map(item => {\n            var temp = Object.assign({}, item);\n            if (temp.key === range) {\n                temp.isActive = true;\n            } else {\n                temp.isActive = false;\n            }\n            return temp;\n        });\n        setFilterOptions(updateFilter);\n        setFilterValue(range)\n    }\n\n    console.warn('picing chart')\n    return (\n        <div className='graph-wrapper'>\n            <ChartFilter\n                chartFilter={filterOptions}\n                handleFilterChange={handleFilterChange}\n            />\n            <Area {...config} onReady={(plot) => {\n                PlotMaps.area = plot;\n                plot.on('mousemove', (evt) => {\n                    setTooltipPosition(evt, plot);\n                });\n            }} />\n        </div>\n    )\n}\n\nexport default PricingChart\n","export default __webpack_public_path__ + \"static/media/dollar.84cf06a8.png\";","import React from 'react';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport dollarImage from '../assets/dollar.png'\n\nimport '../styles/components/stockView/_summaryStrip.scss';\n\nconst SummaryStrip = () => {\n    console.warn('SummaryStrip');\n    return (\n        <div className='summary-strip'>\n            <span className='price-status'>\n                <span className='current-price'> $ 208,388.56</span>\n                <sup className='percent-change'> +7.53%</sup>\n            </span>\n            <span className='scrollable-x-axis'>\n                <span className='todays-change block'>\n                    <span className='text'> 24H Change  </span>\n                    <span className='todays-percent-change main-text'>  +   4.2 %  </span>\n                </span>\n                <span className='volume-change block'>\n                    <span className='text'> Volume (24Hours) <InfoCircleOutlined /></span>\n                    <span className='todays-percent-change main-text'>\n                        <img height='13px' width='13px' src={dollarImage} alt=\"dollar icon\" className='dollar-icon' />\n                        3B </span>\n                </span>\n                <span className='apy-change block'>\n                    <span className='text'> APY (est) <InfoCircleOutlined /> </span>\n                    <span className='todays-percent-change main-text'> 2.5 % </span>\n                </span>\n            </span>\n        </div>\n    )\n}\n\nexport default SummaryStrip\n","import React, { useState } from 'react';\n\nimport CreateOrderForm from './CreateOrderForm';\nimport OrdersHistory from './OrdersHistory';\nimport PricingChart from './PricingChart';\nimport SummaryStrip from './SummaryStrip';\nimport '../styles/layouts/_stockView.scss';\n\nconst orderHistory = {\n    \"active_orders\": [\n        {\n            amount: 132,\n            buy_sell_cta: 'Buy',\n            curreny_type: 'EID/TGH',\n            expiry_term: 12,\n            expiry_term_custom: 12,\n            price: 123,\n            slippage_percentage: \"0.5\",\n            slippage_percentage_custom: undefined\n        },\n        {\n            amount: 132,\n            buy_sell_cta: 'Buy',\n            curreny_type: 'EID/TGH',\n            expiry_term: 12,\n            expiry_term_custom: 12,\n            price: 123,\n            slippage_percentage: \"0.5\",\n            slippage_percentage_custom: undefined\n        },\n        {\n            amount: 132,\n            buy_sell_cta: 'Buy',\n            curreny_type: 'EID/TGH',\n            expiry_term: 12,\n            expiry_term_custom: 12,\n            price: 123,\n            slippage_percentage: \"0.5\",\n            slippage_percentage_custom: undefined\n        },\n        {\n            amount: 132,\n            buy_sell_cta: 'Buy',\n            curreny_type: 'EID/TGH',\n            expiry_term: 12,\n            expiry_term_custom: 12,\n            price: 123,\n            slippage_percentage: \"0.5\",\n            slippage_percentage_custom: undefined\n        },\n        {\n            amount: 132,\n            buy_sell_cta: 'Buy',\n            curreny_type: 'EID/TGH',\n            expiry_term: 12,\n            expiry_term_custom: 12,\n            price: 123,\n            slippage_percentage: \"0.5\",\n            slippage_percentage_custom: undefined\n        },\n        {\n            amount: 132,\n            buy_sell_cta: 'Buy',\n            curreny_type: 'EID/TGH',\n            expiry_term: 12,\n            expiry_term_custom: 12,\n            price: 123,\n            slippage_percentage: \"0.5\",\n            slippage_percentage_custom: undefined\n        },\n    ],\n    \"past_orders\": [\n        {\n            amount: 132,\n            buy_sell_cta: 'Buy',\n            curreny_type: 'EID/TGH',\n            expiry_term: 12,\n            expiry_term_custom: 12,\n            price: 123,\n            slippage_percentage: \"0.5\",\n            slippage_percentage_custom: undefined\n        },\n        {\n            amount: 132,\n            buy_sell_cta: 'Buy',\n            curreny_type: 'EID/TGH',\n            expiry_term: 12,\n            expiry_term_custom: 12,\n            price: 123,\n            slippage_percentage: \"0.5\",\n            slippage_percentage_custom: undefined\n        },\n        {\n            amount: 132,\n            buy_sell_cta: 'Buy',\n            curreny_type: 'EID/TGH',\n            expiry_term: 12,\n            expiry_term_custom: 12,\n            price: 123,\n            slippage_percentage: \"0.5\",\n            slippage_percentage_custom: undefined\n        },\n        {\n            amount: 132,\n            buy_sell_cta: 'Buy',\n            curreny_type: 'EID/TGH',\n            expiry_term: 12,\n            expiry_term_custom: 12,\n            price: 123,\n            slippage_percentage: \"0.5\",\n            slippage_percentage_custom: undefined\n        },\n        {\n            amount: 132,\n            buy_sell_cta: 'Buy',\n            curreny_type: 'EID/TGH',\n            expiry_term: 12,\n            expiry_term_custom: 12,\n            price: 123,\n            slippage_percentage: \"0.5\",\n            slippage_percentage_custom: undefined\n        },\n    ]\n}\n\nconst StockView = () => {\n\n    const [orderHistoryState, setOrderHistoryState] = useState(orderHistory);\n\n    const handleOrderPlaced = (params) => {\n        const newActiveState = [params, ...orderHistoryState.active_orders];\n        setOrderHistoryState((state) => {\n            return ({\n                active_orders: newActiveState,\n                past_orders: state.past_orders,\n            })\n        })\n    }\n\n    return (\n\n        <div className='stock-view-overview flex-layout'>\n            <div className=''>\n                <div className='status-block'>\n                    <SummaryStrip />\n                    <PricingChart />\n                </div>\n                <div className='status-block'>\n                    <OrdersHistory orderHistoryState={orderHistoryState} />\n                </div>\n            </div>\n            <CreateOrderForm handleOrderPlaced={handleOrderPlaced} />\n        </div>\n    )\n}\n\nexport default StockView;\n","import React from 'react'\nimport { SwapOutlined, ThunderboltOutlined, WalletOutlined, EllipsisOutlined } from '@ant-design/icons';\n\nimport '../../styles/components/navbar/_navbar.scss';\n\nconst NavBar = () => {\n    console.warn('navbar')\n    return (\n        <nav className='octane-nav'>\n            <span className='logo'> octane </span>\n            <span className='navigation-links hide-for-mobile'>\n                <span className='selected nav-link'>   <SwapOutlined /> Trade </span>\n                <span className='nav-link'> <ThunderboltOutlined /> Execute </span>\n            </span>\n            <span className='other-options'>\n                <span className='dark-bg-cta btn wallet-btn hide-for-mobile'> <WalletOutlined /> COLLECT WALLET </span>\n                <span className='dots settings'> <EllipsisOutlined /> </span>\n            </span>\n        </nav>\n    )\n}\n\nexport default NavBar\n","import './App.scss';\n\nimport StockView from './components/StockView';\nimport NavBar from './components/NavBar/NavBar';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      {/* Top Nav */}\n      <NavBar />\n      {/* Form Content */}\n      <StockView />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}